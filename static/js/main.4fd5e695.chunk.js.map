{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h5/style/StyleForAllPages.module.css","p2-homeworks/h5/style/Header.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h12/HW12.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h10/HW10.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h12/HW12.tsx","p2-homeworks/h5/pages/Junior_Plus.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/HW8.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/My_Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","s","panel","hidden_panel","nav_item","to","Message","props","MessageCss","post","block_1","avatar","src","alt","block_2","wrap","name","message","date","time","triangle","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","t","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","someClass","dont_have_error","have_error","value","onChange","onKeyPress","e","key","GreetingContainer","users","addUserCallback","setName","setError","length","currentTarget","alert","HW3","setUsers","newListUsers","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","PreJunior","container","HW10","console","log","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","HW11","value1","value2","HW12","theme","Junior_Plus","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","x","y","defaultState","getItem","parse","restoreState","HW6","setValue","undefined","SuperSelect","options","onChangeOption","SuperRadio","mappedOptions","o","i","arr","HW7","initialPeople","age","HW8","people","setPeople","finalPeople","p","action","homeWorkReducer","payload","Clock","setTimerId","show","stop","onMouseEnter","onMouseLeave","id","window","setInterval","HW9","Junior","Error404","PATH","My_Routes","path","element","HW5","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4fd5e695.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Message_post__38Wae\",\"block_1\":\"Message_block_1__171IQ\",\"avatar\":\"Message_avatar__2UiGy\",\"triangle\":\"Message_triangle__1KxSm\",\"block_2\":\"Message_block_2__3LYo6\",\"wrap\":\"Message_wrap__y9peK\",\"name\":\"Message_name__3JtCr\",\"message\":\"Message_message__2WiP2\",\"date\":\"Message_date__30kY_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StyleForAllPages_container__2DR0g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"Header_panel__2nsoi\",\"hidden_panel\":\"Header_hidden_panel__1olBS\",\"nav_item\":\"Header_nav_item__1_nlv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3iCiT\",\"error\":\"Greeting_error__36yNZ\",\"dont_have_error\":\"Greeting_dont_have_error__ODp_2\",\"have_error\":\"Greeting_have_error__1fIwZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3ogy5\",\"type2\":\"SuperInputText_type2__Vu12i\",\"errorInput\":\"SuperInputText_errorInput__3lZNY\",\"error\":\"SuperInputText_error__3BTzj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__KTx-p\",\"column\":\"HW4_column__Yy0RD\",\"testSpanError\":\"HW4_testSpanError__N9S5f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3yWBp\",\"red\":\"SuperButton_red__1DHuH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1JcGH\",\"spanClassName\":\"SuperCheckbox_spanClassName__2CyRk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"HW12_dark__2ps7S\",\"dark-text\":\"HW12_dark-text__3nyAx\",\"red\":\"HW12_red__2CCsO\",\"red-text\":\"HW12_red-text__3zaI6\",\"some\":\"HW12_some__1Mbmq\",\"some-text\":\"HW12_some-text__8EReo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__eCdTU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__3pdWy\"};","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport s from './style/Header.module.css'\r\n\r\nfunction Header() {\r\n    return (\r\n\r\n        <div className={s.panel}>\r\n            <nav className={s.hidden_panel}>\r\n                <Link className={s.nav_item} to={\"/pre-junior\"}> PreJunior</Link>\r\n                <Link className={s.nav_item} to={\"/junior\"}> Junior</Link>\r\n                <Link className={s.nav_item} to={\"/junior+\"}> Junior+</Link>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport MessageCss from './Message.module.css'\r\ntype PropsTypeMessage = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string\r\n};\r\nfunction Message (props: PropsTypeMessage) {\r\n    return (\r\n        <div className={MessageCss.post}>\r\n            <div className={MessageCss.block_1}>\r\n                <img className={MessageCss.avatar} src={props.avatar} alt=\"тут картинка\"/>\r\n            </div>\r\n            <div className={MessageCss.block_2}>\r\n                <div className={MessageCss.wrap}>\r\n                    <div className={MessageCss.name}>\r\n                        {props.name}\r\n                    </div>\r\n                    <div className={MessageCss.message}>\r\n                        {props.message}\r\n                    </div>\r\n                    <div className={MessageCss.date}>\r\n                        {props.time}\r\n                    </div>\r\n                    <div className={MessageCss.triangle}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Artem',\r\n    message: 'npm start нажимал?',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void// need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\r\n\r\n    return (\r\n        <div>\r\n            {props.affair.name} {props.affair.priority}\r\n\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (id: number)=> void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')} // need to fix\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high'|'low'|'middle' // need to fix any\r\nexport type AffairType = {\r\n    _id: number,\r\n    name: string,\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\n// @ts-ignore\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all')\r\n        return affairs;\r\n    else if (filter==='high') {\r\n        return affairs.filter(t => t.priority === 'high')\r\n    }\r\n    else if (filter==='low') {\r\n        return affairs.filter(t => t.priority === 'low')\r\n    }\r\n    else if (filter==='middle') {\r\n        return affairs.filter(t => t.priority === 'middle')\r\n    }\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n\r\n    return affairs.filter(t => t._id != _id);\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState <Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) =>void// need to fix any\r\n    addUser:() => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.someClass :s.error ; // need to fix with (?:)\r\n    const message = error ? s.dont_have_error : s.have_error;\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n             addUser();\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} className={inputClass} onKeyPress={onKeyPressHandler}/>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n            <div className={message}>{error}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        if (e.currentTarget.value !== '') {\r\n            setName(e.currentTarget.value)\r\n            setError('Добавление пользователя РАЗРЕШЕНО!')\r\n        } else {\r\n            setError('')\r\n            setName('');\r\n        }\r\n    }\r\n    const addUser = () => {\r\n        if (name !=='') {\r\n            addUserCallback(name);\r\n            totalUsers += 1;\r\n            alert(`Hello ${name} !`)\r\n        }// need to fix\r\n    }\r\n\r\n    let totalUsers = users.length; // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        let newUser = {_id: v1(), name: name};\r\n        let newListUsers = [newUser,...users];\r\n        setUsers(newListUsers); // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\nimport {isBoolean} from \"util\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport s from '../style/StyleForAllPages.module.css'\r\nfunction PreJunior() {\r\n    return (\r\n        <div className={s.container}>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\nfunction HW10() {\r\n    // useSelector, useDispatch\r\n    const loading = false\r\n\r\n    const setLoading = () => {\r\n        // dispatch\r\n        // setTimeout\r\n        console.log('loading...')\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 10\r\n\r\n            {/*should work (должно работать)*/}\r\n            {loading\r\n                ? (\r\n                    <div>крутилка...</div>\r\n                ) : (\r\n                    <div>\r\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<Alternative/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW10\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperRange.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value)\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'range'}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRange\r\n","import React from 'react'\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange?: (value: [number, number]) => void\r\n    value?: [number, number]\r\n    // min, max, step, disable, ...\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        onChangeRange, value,\r\n        // min, max, step, disable, ...\r\n    }\r\n) => {\r\n    // сделать самому, можно подключать библиотеки\r\n\r\n    return (\r\n        <>\r\n            DoubleRange\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperDoubleRange\r\n","import React, {useState} from 'react'\r\nimport SuperRange from './common/c7-SuperRange/SuperRange'\r\nimport SuperDoubleRange from './common/c8-SuperDoubleRange/SuperDoubleRange'\r\n\r\nfunction HW11() {\r\n    const [value1, setValue1] = useState(0)\r\n    const [value2, setValue2] = useState(100)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 11\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <span>{value1}</span>\r\n                <SuperRange\r\n                    // сделать так чтоб value1 изменялось\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <span>{value1}</span>\r\n                <SuperDoubleRange\r\n                    // сделать так чтоб value1 и value2 изменялось\r\n                />\r\n                <span>{value2}</span>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperRange/>*/}\r\n            {/*<AlternativeSuperDoubleRange/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW11\r\n","import React from \"react\";\r\nimport s from \"./HW12.module.css\";\r\n\r\nconst themes = ['dark', 'red', 'some'];\r\n\r\nfunction HW12() {\r\n    const theme = 'some'; // useSelector\r\n\r\n    // useDispatch, onChangeCallback\r\n\r\n    return (\r\n        <div className={s[theme]}>\r\n            <hr/>\r\n            <span className={s[theme + '-text']}>\r\n                homeworks 12\r\n            </span>\r\n\r\n            {/*should work (должно работать)*/}\r\n            {/*SuperSelect or SuperRadio*/}\r\n\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW12;\r\n","import React from 'react'\r\nimport HW10 from '../../h10/HW10'\r\nimport HW11 from '../../h11/HW11'\r\nimport HW12 from \"../../h12/HW12\";\r\nimport s from '../style/StyleForAllPages.module.css'\r\n\r\nfunction Junior_Plus() {\r\n    return (\r\n        <div className={s.container}>\r\n            <HW10/>\r\n            <HW11/>\r\n            <HW12/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior_Plus\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode() // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        // setEditMode() // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        // setValue()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = []; // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange, onChangeOption\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + '-' + i}>\r\n            <input\r\n                type={'radio'}\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import React, {useState} from 'react'\r\nimport {homeWorkReducer} from './bll/homeWorkReducer'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\n// export type UserType =\r\n\r\nconst initialPeople = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 66},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState<any>(initialPeople) // need to fix any\r\n\r\n    // need to fix any\r\n    const finalPeople = people.map((p: any) => (\r\n        <div key={p._id}>\r\n            some name, age\r\n        </div>\r\n    ))\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: 'sort', payload: 'up'}))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n            {/*should work (должно работать)*/}\r\n            {finalPeople}\r\n\r\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\r\n            <div>sort down</div>\r\n            check 18\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW8\r\n","export const homeWorkReducer = (state: any, action: any): any => { // need to fix any\r\n    switch (action.type) {\r\n        case 'sort': {\r\n            // need to fix\r\n            return state\r\n        }\r\n        case 'check': {\r\n            // need to fix\r\n            return state\r\n        }\r\n        default: return state\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\nfunction Clock() {\r\n    const [timerId, setTimerId] = useState<number>(0)\r\n    const [date, setDate] = useState<Date>()\r\n    const [show, setShow] = useState<boolean>(false)\r\n\r\n    const stop = () => {\r\n        // stop\r\n    }\r\n    const start = () => {\r\n        stop()\r\n        const id: number = window.setInterval(() => {\r\n            // setDate\r\n        }, 1000)\r\n        setTimerId(id)\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        // show\r\n    }\r\n    const onMouseLeave = () => {\r\n        // close\r\n    }\r\n\r\n    const stringTime = 'Time' // fix with date\r\n    const stringDate = 'Date' // fix with date\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                onMouseEnter={onMouseEnter}\r\n                onMouseLeave={onMouseLeave}\r\n            >\r\n                {stringTime}\r\n            </div>\r\n\r\n            {show && (\r\n                <div>\r\n                    {stringDate}\r\n                </div>\r\n            )}\r\n\r\n            <SuperButton onClick={start}>start</SuperButton>\r\n            <SuperButton onClick={stop}>stop</SuperButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n","import React from 'react'\r\nimport Clock from './Clock'\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW9\r\n","import React from 'react'\r\n\r\nimport HW6 from \"../../h6/HW6\";\r\nimport HW7 from '../../h7/HW7'\r\nimport HW8 from \"../../h8/HW8\";\r\nimport HW9 from \"../../h9/HW9\";\r\nimport s from '../style/StyleForAllPages.module.css'\r\nfunction Junior() {\r\n    return (\r\n        <div className={s.container}>\r\n            <HW6/>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport s from '../style/StyleForAllPages.module.css'\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.container}>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport {\r\n    Routes,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Junior_Plus from \"./pages/Junior_Plus\";\r\nimport Junior from './pages/Junior';\r\nimport Error404 from \"./pages/Error404\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior+'\r\n    // add paths\r\n}\r\n\r\nfunction My_Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роута*/}\r\n            <Routes>\r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                <Route path={'/'} element={\"\"}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} element={<Junior_Plus/>}/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route path={'/*'} element={<Error404/>}/>\r\n\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default My_Routes\r\n","import React from 'react'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport Header from './Header'\r\nimport My_Routes from './My_Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n\r\n                <Header/>\r\n\r\n                <My_Routes/>\r\n\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\n\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>Выбери уровень подготовки:</div>\r\n            <HW5/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}